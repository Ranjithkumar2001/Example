#include <stdio.h>
#include <stdlib.h>
#include <math.h>



void add(int *tempArr,int *selected,int selectedCount,int n){
     for(int i = 0; i<n;i++){
            if (selectedCount < n) {
                for(int i = 0; i<n*2;i++){
                    for(int j = i+1;j<n*2;j++){
                        if(tempArr[i] > tempArr[j]){
                            int tmp = tempArr[i];
                            tempArr[i] = tempArr[j];
                            tempArr[j] = tmp;
                        }
                        
                    }
                }
                selected[selectedCount] = tempArr[selectedCount+1];
                selectedCount++;
            }
        }
}

void sortarr(int *selected,int n){
    
  for(int i = 0; i<n;i++){
            for(int j = i+1;j<n;j++){
                if(selected[i] > selected[j]){
                    int tmp = selected[i];
                    selected[i] = selected[j];
                    selected[j] = tmp;
                }
                
            }
    }
}


void processAdminDroidArrays(int arr1[], int arr2[], int size) {
    
    int n = 3;//sqrt_root(arr[0]); 
    
    
    int output[n][n];
    int partitionSize = n;
 
    for (int i = 0; i < n; i++) {
        int tempArr[2 * partitionSize]; 
        int k = 0;
        
        for (int j = 0; j < partitionSize; j++) {
            tempArr[k++] = arr1[1 + i * partitionSize + j];
        }
 
        for (int j = 0; j < partitionSize; j++) {
            tempArr[k++] = arr2[1 + i * partitionSize + j];
        }
 
        double sum = 0;
        for (int j = 0; j < k; j++) {
            sum += tempArr[j];
        }
        double avg = sum / k;
 
        int selected[n], selectedCount = 0;
        for (int j = 0; j < k; j++) {
            if (tempArr[j] > avg) {
                selected[selectedCount++] = tempArr[j];
            }
        }
        
        add(tempArr,selected,selectedCount,n);
 
        // for(int i = 0; i<n;i++){
        //     if (selectedCount < n) {
        //         for(int i = 0; i<n*2;i++){
        //             for(int j = i+1;j<n*2;j++){
        //                 if(tempArr[i] > tempArr[j]){
        //                     int tmp = tempArr[i];
        //                     tempArr[i] = tempArr[j];
        //                     tempArr[j] = tmp;
        //                 }
                        
        //             }
        //         }
        //         selected[selectedCount] = tempArr[selectedCount+1];
        //         selectedCount++;
        //     }
        // }

       
        sortarr(selected,n);
        // for(int i = 0; i<n;i++){
        //     for(int j = i+1;j<n;j++){
        //         if(selected[i] > selected[j]){
        //             int tmp = selected[i];
        //             selected[i] = selected[j];
        //             selected[j] = tmp;
        //         }
                
        //     }
        // }
 
        for (int j = 0; j < n; j++) {
            output[i][j] = selected[j];
        }
    }

 
    // Print the output 2D array
    printf("Output 2D Array:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("%d ", output[i][j]);
        }
        printf("\n");
    }
}
 
int main() {
    int arr1[] = {9, 8, 11, 7, 4, 3, 10, 2, 7, 6};
    int arr2[] = {9, 4, 6, 9, 2, 1, 8, 13, 1, 5};
 
    int size =arr1[0];
 
    processAdminDroidArrays(arr1, arr2, size);
 
    return 0;
}
